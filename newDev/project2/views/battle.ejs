<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include ('./partials/head.ejs') %>
    <title><%=characterOne.name%> Vs <%=characterTwo.name%></title>
  </head>
  <body>
    <!-- 
// 1 v 1. On each turn, player has these options: Attack, Defend, Special Ability, Attempt to Flee (mana and health do not recover between fights. Opponent can choose
// to allow the flee, or choose to pursue. tThere will be a roll)), Inventory.
// A player can do two of the above actions per turn, except for special ability, which takes up the entire turn.
 -->
    <div id="container">
        <div class="battleLog"></div>
      <h1><%=characterOne.name%> Vs <%=characterTwo.name%></h1>
        <!--  -->
      <div id="playerOne">
        <!--  -->
      <p id="charOneName"><%=characterOne.name%></p>
      <br />
      <div class="flexRow">
        <div class="flexColumn">
          <p>Current Health:</p>
          <p><%=`${characterOne.currentHealth}`%></p>
          <p>Max Health:</p>
          <p><%=`${characterOne.maxHealth}`%></p>
          <p>Current Mana:</p>
          <p><%=characterOne.currentMana%></p>
          <p>Max Mana:</p>
          <p><%=characterOne.maxMana%></p>
          <p>Wisdom:</p>
          <p><%=characterOne.wisdom%></p>
          <p>Strength:</p>
          <p id="charOneStrength"><%=characterOne.strength%></p>
          <p>Charima:</p>
          <p><%=characterOne.charisma%></p>
          <p>Agility:</p>
          <p><%=characterOne.agility%></p>
          <% if (characterOne.itemOne) { %>
          <p>Item 1:</p>
          <p>Damage:</p>
          <p id="charOneWeaponOneDamage"><%=characterOne.itemOne.damage%></p>
          <p>Level:</p>
          <p id="charOneWeaponOneLevel"><%=characterOne.itemOne.level%></p>
          <p>Type:</p>
          <p id="charOneWeaponOneType"><%=characterOne.itemOne.type%></p>
          <% } %> <% if (characterOne.itemTwo) { %>
          <p>Item 2:</p>
          <p>Damage:</p>
          <p id="charOneWeaponTwoDamage"></p>><%=characterOne.itemTwo.damage%></p>
          <p>Level:</p>
          <p id="charOneWeaponTwoLevel"><%=characterOne.itemTwo.level%></p>
          <p>Type:</p>
          <p id="charOneWeaponTwoType"><%=characterOne.itemTwo.type%></p>
          <% }%>
        </div>
        <div class="flexColumn">
          <button id="charOneAttack" class="battleButton">Attack</button>
          <button id="charOneDefend" class="battleButton">Defend</button>
          <button id="charOneSpecial" class="battleButton">
            Special Ability
          </button>
          <button id="charOneInventory" class="battleButton">Inventory</button>
          <button id="charOneFlee" class="battleButton">Flee</button>
          
        </div>
        <div class="staticModal">
          <p>Attack with:</p>
          <button id="modalItemOne">
            <%=characterOne.itemOne.name%>
          </button>
          <button id="modalItemTwo">
            <%=characterOne.itemTwo.name%>
          </button>
        </div>
        <div id="specialAbilitiesList">
            <h4>Special Abilities:</h4>
            <% for (ability of characterOne.abilities) { %>
                <button class="specialAbility" id="<%=`${ability.name}`%>"><%=ability.name%></button>
            <% } %>
        </div>
        <div class="staticModal" id="modalFlee">
            <p>You cannot flee if you've acted this turn.</p>
            <button id="modalFleeButton">OK</button>
        </div>
    </div>
     </div>
        <div id="playerTwo">
      <p id="charTwoName"><%=characterTwo.name%></p>
      <br />
      <div class="flexRow">
        <div class="flexColumn">
          <p>Current Health:</p>
          <p><%=`${characterTwo.currentHealth}`%></p>
          <p>Max Health:</p>
          <p><%=`${characterTwo.maxHealth}`%></p>
          <p>Current Mana:</p>
          <p><%=characterTwo.currentMana%></p>
          <p>Max Mana:</p>
          <p><%=characterTwo.maxMana%></p>
          <p>Wisdom:</p>
          <p><%=characterTwo.wisdom%></p>
          <p>Strength:</p>
          <p id="charTwoStrength"><%=characterTwo.strength%></p>
          <p>Charima:</p>
          <p><%=characterTwo.charisma%></p>
          <p>Agility:</p>
          <p><%=characterTwo.agility%></p>
          <% if (characterTwo.itemOne) { %>
          <p>Item 1:</p>
          <p>Damage:</p>
          <p id="charTowWeaponOneDamage"><%=characterTwo.itemOne.damage%></p>
          <p>Level:</p>
          <p id="charTwoWeaponOneLevel"><%=characterTwo.itemOne.level%></p>
          <p>Type:</p>
          <p id="charTwoWeaponOneType"><%=characterTwo.itemOne.type%></p>
          <% } %> <% if (characterOne.itemTwo) { %>
          <p>Item 2:</p>
          <p>Damage:</p>
          <p id="charTwoWeaponTwoDamage"></p>><%=characterTwo.itemTwo.damage%></p>
          <p>Level:</p>
          <p id="charTwoWeaponTwoLevel"><%=characterTwo.itemTwo.level%></p>
          <p>Type:</p>
          <p id="charTwoWeaponTwoType"><%=characterTwo.itemTwo.type%></p>
          <% }%>
        </div>
        <div class="flexColumn">
          <button id="charTwoAttack" class="battleButton">Attack</button>
          <button id="charTwoDefend" class="battleButton">Defend</button>
          <button id="charTwoSpecial" class="battleButton">
            Special Ability
          </button>
          <button id="charTwoInventory" class="battleButton">Inventory</button>
          <button id="charTwoFlee" class="battleButton">Flee</button>
          
        </div>
        <div class="staticModal">
          <p>Attack with:</p>
          <button id="modalItemOne">
            <%=characterTwo.itemOne.name%>
          </button>
          <button id="modalItemTwo">
            <%=characterTwo.itemTwo.name%>
          </button>
        </div>
        <div id="specialAbilitiesList">
            <h4>Special Abilities:</h4>
            <% for (ability of characterTwo.abilities) { %>
                <button class="specialAbility" id="<%=`${ability.name}`%>"><%=ability.name%></button>
            <% } %>
        </div>
        <div class="staticModal" id="modalFlee">
            <p>You cannot flee if you've acted this turn.</p>
            <button id="modalFleeButton">OK</button>
        </div>
      </div>
      
     </div>

      <h2></h2>
    </div>
    <script>
        let char = 1; // turn will be one for character one, two for character two.
        let actionCount = 0; // changes turns after every two actions.
        //
        // Attack Logic:
        //
        // character one stats:
        let firstName = $("#charOneName").text()
        //
        let firstStrength = Number($("#charOneStrength").text());
        let firstWisdom = Number($("#charOneWisdom").text());
        let firstAgility = Number($("#charOneAgility").text());
        let firstCharisma = Number($("#charOneCharisma").text());
        let firstMana = Number($("#charOneCurrentMana").text());
        let firstHealth = Number($("#charOneCurrentHealth").text());
        let firstDefense = Number($("#charOneDefense").text());

        let firstItem1 = {damage: Number($("#charOneWeaponOneDamage").text()), level: Number($("#charOneWeaponOneLevel").text()), type: $("#charOneWeaponOneType").text()}
        let firstItem2 = {damage: Number($("#charOneWeaponTwoDamage").text()), level: Number($("#charOneWeaponTwoLevel").text()), type: $("#charOneWeaponTwoType").text()}
        //
        // character two stats:
        let secondName = $("#charTwoName").text()
        //
        let secondStrength = Number($("#charTwoStrength").text());
        let secondWisdom = Number($("#charTwoWisdom").text());
        let secondAgility = Number($("#charTwoAgility").text());
        let secondCharisma = Number($("#charTwoCharisma").text());
        let secondMana = Number($("#charTwoCurrentMana").text());
        let secondHealth = Number($("#charTwoCurrentHealth").text());
        let secondDefense = Number($("#charTwoDefense").text());

        let secondItem1 = {damage: Number($("#charTwoWeaponOneDamage").text()), level: Number($("#charTwoWeaponOneLevel").text()), type: $("#charTwoWeaponOneType").text()}
        let secondItem2 = {damage: Number($("#charTwoWeaponTwoDamage").text()), level: Number($("#charTwoWeaponTwoLevel").text()), type: $("#charTwoWeaponTwoType").text()}
        //
        //
        // let strength
        // let wisdom
        // let agility
        // let charisma
        // let mana
        // let health
        // let defense

        // let item1
        // let item2
        // //

        // level up menu opens automatically at end up battle?

        function victory(num) {
          


          let pathname = `${window.location.pathname}`.split("/"); 
          // should return /battle/:id1/:id2
          let charOneId = pathname[1]
          let charTwoId = pathname[2]
          if (num === 1) {
            // player 1 wins.
            $.ajax({
                url: `/victory/${charOneId}/${charTwoId}`,
                type: 'POST',
                data: JSON.stringify({"viewedProfiles": viewedProfiles}),
                success: function(response){
                }

              })
              $.ajax({
                url: `/victory/${charOneId}/${charTwoId}`,
                type: 'GET',
                data: JSON.stringify({"viewedProfiles": viewedProfiles}),
                success: function(response){
                }

              })
          } else if (num === 2) {

            $.ajax({
                url: `/victory/${charTwoId}/${charOneId}`,
                type: 'POST',
                data: JSON.stringify({"viewedProfiles": viewedProfiles}),
                success: function(response){
                }

              })
              $.ajax({
                url: `/victory/${charTwoId}/${charOneId}`,
                type: 'GET',
                data: JSON.stringify({"viewedProfiles": viewedProfiles}),
                success: function(response){
                }
          }) 
        } else if (num === 3) {

          $.ajax({
                url: `/mutually-assured-destruction/${charTwoId}/${charOneId}`,
                type: 'POST',
                data: JSON.stringify({"viewedProfiles": viewedProfiles}),
                success: function(response){
                }

              })
              $.ajax({
                url: `/mutually-assured-destruction/${charTwoId}/${charOneId}`,
                type: 'GET',
                data: JSON.stringify({"viewedProfiles": viewedProfiles}),
                success: function(response){
                }
        })
          //
          //
          // set up server logic for victories and leveling.
      }}


        function incrementActions() {
            actionCount++
            if (actionCount >= 2) {
                // change turn  
                turn();
                actionCount = 0;
            }
        }
        // at beginning of each turn, determine if the characters are dead.

        const turn = () => {
          if (char === 1) {
            char = 2;
            // it's now second players turn
          } else {
            char = 1
            // its now first players turn
          }


          if (firstHealth <= 0 && secondHealth <= 0) {
            console.log("tie")
            victory(3)
          } else if (firstHealth <= 0) {
            console.log("player two wins")
            victory(2)
          } else if (secondHealth <= 0) {
            console.log("player one wins")
            victory(1)
          }

        }
        

        function handleAttack(weapon) {
          // who is attacking and with what? Determine stats and results accordingly.
          // weapons are passed as objects.

            let stat;
            if (char === 1) {

              if (weapon.type === "melee") {
                let stat = firstStrength;
              } else  if (weapon.type === "ranged") {
                let stat = firstAgility;
              } else  if (weapon.type === "sorcery") {
                let stat = firstWisdom;
              }
              

              let damageDealt = Math.floor(Math.rand() * weapon.damage * weapon.level) + stat - secondDefense
              console.log(`player one dealt ${damageDealt} damage.`)

              // deal damage:
              $("#charTwoCurrentHealth").text(`${secondHealth - damageDealt}`)
              // reset defense:
              $("#charOneDefense").text("0")
              secondDefense = 0;

              $("#battleLog").append($(`<p>${firstName} dealt ${damageDealt} damage to ${secondName}</p>`))
              //
              firstHealth = firstHealth - damageDealt;
              //
              incrementActions()
              //
              //
              //

            } else if (char === 2) {
              // player two attacked?
              if (weapon.type === "melee") {
                let stat = secondStrength;
              } else  if (weapon.type === "ranged") {
                let stat = secondAgility;
              } else  if (weapon.type === "sorcery") {
                let stat = secondWisdom;
              }
              


              // determine damage
              let damageDealt = Math.floor(Math.rand() * weapon.damage * weapon.level) + stat - firstDefense
              console.log(`player one dealt ${damageDealt} damage.`)

              // apply damage to player 1
              $("#charOneCurrentHealth").text(`${firstHealth - damageDealt}`)
              // reset defense:
              $("#charTwoDefense").text("0")
              firstDefense = 0;

              // note this in log and increment actions.
              $("#battleLog").append($(`<p>${secondName} dealt ${damageDealt} damage to ${firstName}</p>`))
              //
              secondHealth = secondHealth - damageDealt
              //
              incrementActions()

            }
        }
        
                $("#attack").click(function () {
                  $("#staticModal").css("display", "initial");
                });

        function hideModal() {
          $("#staticModal").css("display", "none");
        }
        hideModal();
        //
        // attack with which item?
        $("#modalItemOne").click(function () {
          hideModal();
          handleAttack(item1)
        });
        $("#modalItemTwo").click(function () {
          hideModal();
          handleAttack(item2)
        });

        // make only a single options menu with characters remapped each time char increments.
            ///////////////

        $("#defend").click(function () {

          if (char === 1) {

            let defended = Math.floor(Math.rand() * firstAgility)
            console.log(`player one defended for ${defended}.`)
            $("#battleLog").append($(`<p>${firstName} defended, subtracting ${defended} from their opponent's next attack roll.</p>`))
            $("#charOneDefense").text(`${firstDefense + defended}`)
            firstDefense = firstDefense + defended;
            incrementActions()
          } else if (char === 2) {

            let defended = Math.floor(Math.rand() * secondAgility)
            console.log(`player one defended for ${defended}.`)
            $("#battleLog").append($(`<p>${secondName} defended, subtracting ${defended} from their opponent's next attack roll.</p>`))
            $("#charTwoDefense").text(`${secondDefense + defended}`)
            secondDefense = secondDefense + defended;
            incrementActions()
          }


        });
        $("#special").click(function () {
            if (actions !== 0) {
                $("#specialPopup").css("display", "initial")
            } else {
                $("#specialAbilityList").css("display", "initial")
            
            }

        });
        /////////////////////////////////////
        // Make a list of all special abilities as functions.
        //
        /////////////////////////////////////
        $(".specialAbility").click(function (e) {

            incrementActions();
            incrementActions();
        })

        // Design an inventory system

        $("#inventory").click(function () {

        });


        // Design a flee mechanic. Remember that characters do not naturally heal. remember to put those abilities in.
        $("#flee").click(function () {

            if (actions !== 0) {
                $("#modalFlee").css("display", "initial")
                
            } else {
                    let fleeAttempt = Math.floor(Math.rand() * agility);
                    $("#hiddenStack").append($(`<p>${fleeAttempt}</p>`).attr("class", `flee`))
                    $("#battleLog").append($(`<p>${name} attempted to flee and rolled ${fleeAttempt}.</p>`))
                    incrementActions();
                    incrementActions();
            }

        });

        $("#modalFleeButton").click(function () {
            $("#modalFleeButton").css("display", "none")
                
        })
            </script>
  </body>
</html>
