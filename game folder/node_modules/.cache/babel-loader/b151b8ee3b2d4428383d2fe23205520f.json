{"ast":null,"code":"var _jsxFileName = \"/Users/jessefalconmusik/newDev/simon_says/simon_says/src/App.js\";\nimport { React, useState, useEffect, Fragment } from \"react\";\nimport { Howl, Howler } from 'howler'; // audio\n\nimport { SketchPicker } from 'react-color'; // color picker.\n\nimport logo from \"./logo.svg\";\nimport './App.css'; // https://codepen.io/raurir/pen/qtEmn <---- source of pentagram.\n//\n//\n// May I use react?\n// \n// so you know what? Put fucking wubs into this game, dude. Yes.\n// OR just do sets. A dub set. A metal set. A smooth jazz set. You could do it in a pentragram shape or something, that would be cool. Then you could do pentatonic.\n// with the colors, you should build in some nice presets.\n\nfunction SimonSays() {\n  //\n  // how about a game of simon says?\n  //===========\n  // COLORS : an array of all possible colors that the buttons will have.\n  //===========\n  //\n  const colors = [\"red\", \"blue\", \"green\", \"yellow\", \"orange\", \"purple\", \"turquoise\"]; // how many buttons does the user want? We will propagate from the colors array.\n\n  const [buttonColors, setButtonColors] = useState([0, 1, 2, 3, 4, 5, 6, 7, 8]); // ==============\n  // NOTES: what are the urls for all these electric guitar notes?\n  // =============\n\n  const notes = {\n    e: \"url\",\n    a: \"url\",\n    d: \"url\",\n    g: \"etc...\"\n  };\n  const [currentScale, setCurrentScale] = useState(scales.aeolian); // we need to remember the name of the scale we're using.\n  //\n  // And we need to remember what sequence of notes the user must copy. We're going to spread these notes into an array so we can keep pushing new notes.\n\n  const [currentNotes, setCurrentNotes] = useState([...scales.aeolian]); //\n  // Where are we in Simon's melody?\n\n  const [sequence, setSequence] = useState([]);\n  const [sequenceCurrentPlace, setSequenceCurrentPlace] = useState(0);\n  const [nextButton, setNextButton] = useState(\"red\"); //\n  // every time we advance within the current sequence, a new correct choice has to be set.\n\n  useEffect(() => {\n    setNextButton(currentNotes[sequenceCurrentPlace]);\n  }, [sequenceCurrentPlace]); // Choice logic, did the user pick the right note?\n\n  const handleClick = buttonColor => {\n    if (buttonColor == nextButton) if (sequenceCurrentPlace < sequence.length) {\n      setSequenceCurrentPlace(sequenceCurrentPlace + 1);\n    } else {\n      setSequence([...sequence, Math.floor(Math.random * currentNotes.length)]);\n      setSequenceCurrentPlace(0);\n    }\n  }; // Make sure to add some clever css effects for the button lights...\n\n\n  const generateNewSequence = () => {}; //\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"simonSays\",\n    class: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"outerCircle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, buttonColors.map(colorIndex => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      \"background-color\": `${colors[colorIndex]}`\n    },\n    onClick: () => handleClick(colors[colorIndex]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"rulesLeaderboard\",\n    class: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"options\",\n    class: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"scales\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Choose your scale.\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"select\",\n    value: \"\",\n    onChange: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setScale(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Rock On\")));\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"base\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"bar n0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"bar n1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"bar n2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"bar n3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"bar n4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"overbar n0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 35\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"overbar n1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 35\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"overbar n2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 35\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"overbar n3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 35\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"overbar n4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 35\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jessefalconmusik/newDev/simon_says/simon_says/src/App.js"],"names":["React","useState","useEffect","Fragment","Howl","Howler","SketchPicker","SimonSays","colors","buttonColors","setButtonColors","notes","e","a","d","g","currentScale","setCurrentScale","scales","aeolian","currentNotes","setCurrentNotes","sequence","setSequence","sequenceCurrentPlace","setSequenceCurrentPlace","nextButton","setNextButton","handleClick","buttonColor","length","Math","floor","random","generateNewSequence","map","colorIndex","setScale","App"],"mappings":"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","sourcesContent":["import { React, useState, useEffect, Fragment } from \"react\"\nimport {Howl, Howler} from 'howler'; // audio\nimport { SketchPicker } from 'react-color' // color picker.\nimport logo from './logo.svg';\nimport './App.css';\n\n\n// https://codepen.io/raurir/pen/qtEmn <---- source of pentagram.\n//\n//\n// May I use react?\n// \n// so you know what? Put fucking wubs into this game, dude. Yes.\n// OR just do sets. A dub set. A metal set. A smooth jazz set. You could do it in a pentragram shape or something, that would be cool. Then you could do pentatonic.\n// with the colors, you should build in some nice presets.\n\n\nfunction SimonSays() {\n  //\n  // how about a game of simon says?\n  //===========\n  // COLORS : an array of all possible colors that the buttons will have.\n  //===========\n  //\n  const colors = [\n    \"red\",\n    \"blue\",\n    \"green\",\n    \"yellow\",\n    \"orange\",\n    \"purple\",\n    \"turquoise\",\n  ];\n  // how many buttons does the user want? We will propagate from the colors array.\n  const [buttonColors, setButtonColors] = useState([0, 1, 2, 3, 4, 5, 6, 7, 8]);\n\n  // ==============\n  // NOTES: what are the urls for all these electric guitar notes?\n  // =============\n  const notes = { e: \"url\", a: \"url\", d: \"url\", g: \"etc...\" };\n\n  const [currentScale, setCurrentScale] = useState(scales.aeolian);\n  // we need to remember the name of the scale we're using.\n  //\n  // And we need to remember what sequence of notes the user must copy. We're going to spread these notes into an array so we can keep pushing new notes.\n  const [currentNotes, setCurrentNotes] = useState([...scales.aeolian]);\n  //\n  // Where are we in Simon's melody?\n  const [sequence, setSequence] = useState([]);\n  const [sequenceCurrentPlace, setSequenceCurrentPlace] = useState(0);\n  const [nextButton, setNextButton] = useState(\"red\");\n  //\n  // every time we advance within the current sequence, a new correct choice has to be set.\n  useEffect(() => {\n    setNextButton(currentNotes[sequenceCurrentPlace]);\n  }, [sequenceCurrentPlace]);\n\n  // Choice logic, did the user pick the right note?\n\n  const handleClick = (buttonColor) => {\n    if (buttonColor == nextButton)\n      if (sequenceCurrentPlace < sequence.length) {\n        setSequenceCurrentPlace(sequenceCurrentPlace + 1);\n      } else {\n        setSequence([\n          ...sequence,\n          Math.floor(Math.random * currentNotes.length),\n        ]);\n        setSequenceCurrentPlace(0);\n      }\n  };\n\n  // Make sure to add some clever css effects for the button lights...\n\n  const generateNewSequence = () => {};\n  //\n\n  return (\n    <div>\n      <div id=\"simonSays\" class=\"center\">\n        <div id=\"outerCircle\">\n          {buttonColors.map((colorIndex) => (\n            <div\n              style={{ \"background-color\": `${colors[colorIndex]}` }}\n              onClick={() => handleClick(colors[colorIndex])}\n            ></div>\n          ))}\n          <div></div>\n        </div>\n      </div>\n      <div id=\"rulesLeaderboard\" class=\"left\"></div>\n      <div id=\"options\" class=\"right\">\n        <label for=\"scales\">Choose your scale.</label>\n        <input type=\"select\" value=\"\" onChange={() => {}}>\n          {/* {scales.map((scale) => (\n            <>\n              <option id={scale}>{scale}</option>\n            </>\n          ))} */}\n        </input>\n\n        <button onClick={() => setScale()}>Rock On</button>\n      </div>\n    </div>\n  );\n}\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div class=\"base\">\n          <div class=\"circle\"></div>\n          <div class=\"bar n0\"><li></li></div>\n          <div class=\"bar n1\"><li></li></div>\n          <div class=\"bar n2\"><li></li></div>\n          <div class=\"bar n3\"><li></li></div>\n          <div class=\"bar n4\"><li></li></div>\n          <div class=\"overbar n0\"><li></li></div>\n          <div class=\"overbar n1\"><li></li></div>\n          <div class=\"overbar n2\"><li></li></div>\n          <div class=\"overbar n3\"><li></li></div>\n          <div class=\"overbar n4\"><li></li></div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}