{"ast":null,"code":"var _jsxFileName = \"/Users/jessefalconmusik/newDev/simon_says/simon_says/src/App.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { Howl, Howler } from 'howler'; // audio\n\nimport { ChromePicker } from 'react-color'; // color picker.\n\nimport { useSpring, animated } from 'react-spring';\nimport logo from \"./logo.svg\";\nimport './App.css'; // https://codepen.io/raurir/pen/qtEmn <---- source of pentagram.\n// No need for context, cuz so small. No need for router either.\n// allow the user to choose from a fun list of background images.\n\nfunction App() {\n  //\n  // how about a game of simon says?\n  const [colorPickDisplayed, setColorPickDisplayed] = useState(false);\n  const [chosenColor, setChosenColor] = useState(\"#fffff\");\n  useEffect(() => {\n    console.log(chosenColor);\n  }, [chosenColor]);\n  useEffect(() => {\n    console.log(colorPickDisplayed);\n  }, [colorPickDisplayed]);\n\n  function handleColor(target) {\n    if (colorPickDisplayed) {\n      if (target.className == \"arrow\") {\n        target.style.borderBottom = `100px solid ${chosenColor}`;\n        console.log(target);\n      }\n    }\n  } // ==============\n  // NOTES: what are the urls for all these electric guitar notes?\n  // =============\n\n\n  const notes = {\n    e: \"url\",\n    a: \"url\",\n    d: \"url\",\n    g: \"etc...\"\n  }; //\n  // And we need to remember what sequence of notes the user must copy. We're going to spread these notes into an array so we can keep pushing new notes.\n\n  const [currentNotes, setCurrentNotes] = useState([]); //\n  // Where are we in Simon's melody?\n\n  const [sequence, setSequence] = useState([]);\n  const [sequenceCurrentPlace, setSequenceCurrentPlace] = useState(0);\n  const [nextButton, setNextButton] = useState(\"red\"); //\n  // every time we advance within the current sequence, a new correct choice has to be set.\n\n  useEffect(() => {\n    setNextButton(currentNotes[sequenceCurrentPlace]);\n  }, [sequenceCurrentPlace]); // Choice logic, did the user pick the right note?\n\n  const handleClick = (buttonId, target) => {\n    handleColor(target);\n    if (buttonId == nextButton) if (sequenceCurrentPlace < sequence.length) {\n      setSequenceCurrentPlace(sequenceCurrentPlace + 1);\n    } else {\n      setSequence([...sequence, Math.floor(Math.random * currentNotes.length)]);\n      setSequenceCurrentPlace(0);\n    }\n  }; // Make sure to add some clever css effects for the button lights...\n\n\n  const generateNewSequence = () => {}; //\n\n\n  function handleColorPickDisplay() {\n    setColorPickDisplayed(!colorPickDisplayed);\n  } // return (\n  //   <div>\n  //     <div id=\"simonSays\" class=\"center\">\n  //       <div id=\"outerCircle\">\n  //         {buttonColors.map((colorIndex) => (\n  //           <div\n  //             style={{ \"background-color\": `${colors[colorIndex]}` }}\n  //             onClick={() => handleClick(colors[colorIndex])}\n  //           ></div>\n  //         ))}\n  //         <div></div>\n  //       </div>\n  //     </div>\n  //     <div id=\"rulesLeaderboard\" class=\"left\"></div>\n  //     <div id=\"options\" class=\"right\">\n  //       <label for=\"scales\">Choose your scale.</label>\n  //       <input type=\"select\" value=\"\" onChange={() => {}}>\n  //         {scales.map((scale) => (\n  //           <>\n  //             <option id={scale}>{scale}</option>\n  //           </>\n  //         ))}\n  //       </input>\n  //       <button onClick={() => setScale()}>Rock On</button>\n  //     </div>\n  //   </div>\n  // );\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"base\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle\",\n    onClick: e => {\n      handleColor(e.target);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bar n0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bar n1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bar n2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bar n3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bar n4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overbar n0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overbar n1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overbar n2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overbar n3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overbar n4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttonContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"arrow\",\n    type: \"button\",\n    id: \"downright-arrow\",\n    onClick: e => handleClick(\"downright\", e.target),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"arrow\",\n    type: \"button\",\n    id: \"downleft-arrow\",\n    onClick: e => handleClick(\"downleft\", e.target),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"arrow\",\n    type: \"button\",\n    id: \"down-arrow\",\n    onClick: e => handleClick(\"down-arrow\", e.target),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"arrow\",\n    type: \"button\",\n    id: \"topright-arrow\",\n    onClick: e => handleClick(\"topright\", e.target),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"arrow\",\n    type: \"button\",\n    id: \"topleft-arrow\",\n    onClick: e => handleClick(\"topleft\", e.target),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      \"visibility\": `${colorPickDisplayed ? \"initial\" : \"hidden\"}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"Pick your color and then click a button!\")), /*#__PURE__*/React.createElement(ChromePicker, {\n    id: \"color-picker\",\n    className: \"colorPicker\",\n    color: `${chosenColor}`,\n    onChangeComplete: e => setChosenColor(e.hex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"colors\",\n    onClick: () => {\n      handleColorPickDisplay();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, !colorPickDisplayed ? \"Colors\" : \"Keep Playing\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jessefalconmusik/newDev/simon_says/simon_says/src/App.js"],"names":["React","useState","useEffect","Fragment","Howl","Howler","ChromePicker","useSpring","animated","App","colorPickDisplayed","setColorPickDisplayed","chosenColor","setChosenColor","console","log","handleColor","target","className","style","borderBottom","notes","e","a","d","g","currentNotes","setCurrentNotes","sequence","setSequence","sequenceCurrentPlace","setSequenceCurrentPlace","nextButton","setNextButton","handleClick","buttonId","length","Math","floor","random","generateNewSequence","handleColorPickDisplay","hex"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, Fragment } from \"react\"\nimport {Howl, Howler} from 'howler'; // audio\nimport { ChromePicker } from 'react-color' // color picker.\nimport {useSpring, animated} from 'react-spring'\nimport logo from './logo.svg';\nimport './App.css';\n\n\n// https://codepen.io/raurir/pen/qtEmn <---- source of pentagram.\n\n// No need for context, cuz so small. No need for router either.\n\n// allow the user to choose from a fun list of background images.\n\nfunction App() {\n\n  //\n  // how about a game of simon says?\n\n\n\n\nconst [colorPickDisplayed, setColorPickDisplayed] = useState(false)\nconst [chosenColor, setChosenColor] = useState(\"#fffff\")\n\nuseEffect(() => {\n  console.log(chosenColor);\n}, [chosenColor])\n\nuseEffect(() => {\n  console.log(colorPickDisplayed);\n}, [colorPickDisplayed])\n\n\nfunction handleColor(target) {\n  if (colorPickDisplayed) {\n    if (target.className == \"arrow\") {\n\n      target.style.borderBottom = `100px solid ${chosenColor}`\n      console.log(target)\n    }\n  }\n}\n\n\n\n\n\n\n\n  // ==============\n  // NOTES: what are the urls for all these electric guitar notes?\n  // =============\n  const notes = { e: \"url\", a: \"url\", d: \"url\", g: \"etc...\" };\n\n  //\n  // And we need to remember what sequence of notes the user must copy. We're going to spread these notes into an array so we can keep pushing new notes.\n  const [currentNotes, setCurrentNotes] = useState([]);\n  //\n  // Where are we in Simon's melody?\n  const [sequence, setSequence] = useState([]);\n  const [sequenceCurrentPlace, setSequenceCurrentPlace] = useState(0);\n  const [nextButton, setNextButton] = useState(\"red\");\n  //\n  // every time we advance within the current sequence, a new correct choice has to be set.\n  useEffect(() => {\n    setNextButton(currentNotes[sequenceCurrentPlace]);\n  }, [sequenceCurrentPlace]);\n\n  // Choice logic, did the user pick the right note?\n\n  const handleClick = (buttonId, target) => {\n\n\n    handleColor(target)\n\n    if (buttonId == nextButton)\n      if (sequenceCurrentPlace < sequence.length) {\n        setSequenceCurrentPlace(sequenceCurrentPlace + 1);\n      } else {\n        setSequence([\n          ...sequence,\n          Math.floor(Math.random * currentNotes.length),\n        ]);\n        setSequenceCurrentPlace(0);\n      }\n  };\n\n  // Make sure to add some clever css effects for the button lights...\n\n  const generateNewSequence = () => {};\n  //\n\n\n  function handleColorPickDisplay() {\n    setColorPickDisplayed(!colorPickDisplayed)\n  }\n  // return (\n  //   <div>\n  //     <div id=\"simonSays\" class=\"center\">\n  //       <div id=\"outerCircle\">\n  //         {buttonColors.map((colorIndex) => (\n  //           <div\n  //             style={{ \"background-color\": `${colors[colorIndex]}` }}\n  //             onClick={() => handleClick(colors[colorIndex])}\n  //           ></div>\n  //         ))}\n  //         <div></div>\n  //       </div>\n  //     </div>\n  //     <div id=\"rulesLeaderboard\" class=\"left\"></div>\n  //     <div id=\"options\" class=\"right\">\n  //       <label for=\"scales\">Choose your scale.</label>\n  //       <input type=\"select\" value=\"\" onChange={() => {}}>\n  //         {scales.map((scale) => (\n  //           <>\n  //             <option id={scale}>{scale}</option>\n  //           </>\n  //         ))}\n  //       </input>\n\n  //       <button onClick={() => setScale()}>Rock On</button>\n  //     </div>\n  //   </div>\n  // );\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"shell\">\n        <div className=\"base\">\n          <div className=\"circle\" onClick={(e) => {handleColor(e.target)}}></div>\n            <div className=\"bar n0\"><li></li></div>\n            <div className=\"bar n1\"><li></li></div>\n            <div className=\"bar n2\"><li></li></div>\n            <div className=\"bar n3\"><li></li></div>\n            <div className=\"bar n4\"><li></li></div>\n            <div className=\"overbar n0\"><li></li></div>\n            <div className=\"overbar n1\"><li></li></div>\n            <div className=\"overbar n2\"><li></li></div>\n            <div className=\"overbar n3\"><li></li></div>\n            <div className=\"overbar n4\"><li></li></div>\n          </div>\n        </div>\n        <div className=\"buttonContainer\"> \n            <button \n              className='arrow'\n              type=\"button\" \n              id=\"downright-arrow\"\n              onClick={(e) =>  \n                handleClick(\"downright\", e.target)}></button>\n            <button \n              className=\"arrow\"\n              type=\"button\" \n              id=\"downleft-arrow\"\n              onClick={(e) => \n                handleClick(\"downleft\", e.target)}></button>\n            <button \n              className=\"arrow\"\n              type=\"button\" \n              id=\"down-arrow\"\n              onClick={(e) => \n                handleClick(\"down-arrow\", e.target)}></button>\n            <button \n              className=\"arrow\"\n              type=\"button\" \n              id=\"topright-arrow\"\n              onClick={(e) => \n                handleClick(\"topright\", e.target)}></button>\n            <button \n              className=\"arrow\"\n              type=\"button\"\n              id=\"topleft-arrow\"\n              onClick={(e) => \n                handleClick(\"topleft\", e.target)}></button>\n        </div>\n        <div style={{\"visibility\": `${colorPickDisplayed ? \"initial\" : \"hidden\"}`}}>\n          <div className=\"modal\">\n            <p>Pick your color and then click a button!</p>\n          </div>\n              <ChromePicker \n                id=\"color-picker\"\n                className=\"colorPicker\"\n                color={`${chosenColor}`} \n                onChangeComplete={(e) => setChosenColor(e.hex)}\n                \n              \n                />\n        </div>\n      \n          <button type=\"button\" id=\"options\"></button>\n          <button type=\"button\" id=\"colors\" onClick={() => {handleColorPickDisplay()}}\n            >{!colorPickDisplayed ? \"Colors\" : \"Keep Playing\"}</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}