{"ast":null,"code":"var _jsxFileName = \"/Users/jessefalconmusik/newDev/simon_says/simon_says/src/App.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { Howl, Howler } from 'howler'; // audio\n\nimport { ChromePicker } from 'react-color'; // color picker.\n\nimport logo from \"./logo.svg\";\nimport './App.css'; // https://codepen.io/raurir/pen/qtEmn <---- source of pentagram.\n// No need for context, cuz so small. No need for router either.\n\nfunction App() {\n  //\n  // how about a game of simon says?\n  const [colorPickDisplayed, setColorPickDisplayed] = useState(false);\n  const [chosenColor, setChosenColor] = useState(\"#fff\");\n\n  function handleColor(target) {\n    if (colorPickDisplayed) {\n      target.style.backgroundColor = `${chosenColor}`;\n    }\n  } // ==============\n  // NOTES: what are the urls for all these electric guitar notes?\n  // =============\n\n\n  const notes = {\n    e: \"url\",\n    a: \"url\",\n    d: \"url\",\n    g: \"etc...\"\n  }; //\n  // And we need to remember what sequence of notes the user must copy. We're going to spread these notes into an array so we can keep pushing new notes.\n\n  const [currentNotes, setCurrentNotes] = useState([]); //\n  // Where are we in Simon's melody?\n\n  const [sequence, setSequence] = useState([]);\n  const [sequenceCurrentPlace, setSequenceCurrentPlace] = useState(0);\n  const [nextButton, setNextButton] = useState(\"red\"); //\n  // every time we advance within the current sequence, a new correct choice has to be set.\n\n  useEffect(() => {\n    setNextButton(currentNotes[sequenceCurrentPlace]);\n  }, [sequenceCurrentPlace]); // Choice logic, did the user pick the right note?\n\n  const handleClick = buttonId => {\n    if (buttonId == nextButton) if (sequenceCurrentPlace < sequence.length) {\n      setSequenceCurrentPlace(sequenceCurrentPlace + 1);\n    } else {\n      setSequence([...sequence, Math.floor(Math.random * currentNotes.length)]);\n      setSequenceCurrentPlace(0);\n    }\n  }; // Make sure to add some clever css effects for the button lights...\n\n\n  const generateNewSequence = () => {}; //\n  // return (\n  //   <div>\n  //     <div id=\"simonSays\" class=\"center\">\n  //       <div id=\"outerCircle\">\n  //         {buttonColors.map((colorIndex) => (\n  //           <div\n  //             style={{ \"background-color\": `${colors[colorIndex]}` }}\n  //             onClick={() => handleClick(colors[colorIndex])}\n  //           ></div>\n  //         ))}\n  //         <div></div>\n  //       </div>\n  //     </div>\n  //     <div id=\"rulesLeaderboard\" class=\"left\"></div>\n  //     <div id=\"options\" class=\"right\">\n  //       <label for=\"scales\">Choose your scale.</label>\n  //       <input type=\"select\" value=\"\" onChange={() => {}}>\n  //         {scales.map((scale) => (\n  //           <>\n  //             <option id={scale}>{scale}</option>\n  //           </>\n  //         ))}\n  //       </input>\n  //       <button onClick={() => setScale()}>Rock On</button>\n  //     </div>\n  //   </div>\n  // );\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"base\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle\",\n    onClick: e => {\n      handleColor(e.target);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bar n0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bar n1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bar n2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bar n3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bar n4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overbar n0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overbar n1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overbar n2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overbar n3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overbar n4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttonContainer\",\n    onClick: e => {\n      handleColor(e.target);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"downright-arrow\",\n    onClick: () => handleClick(\"downright\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"downleft-arrow\",\n    onClick: () => handleClick(\"downleft\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"down-arrow\",\n    onClick: () => handleClick(\"down\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"topright-arrow\",\n    onClick: () => handleClick(\"topright\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"topleft-arrow\",\n    onClick: () => handleClick(\"topleft\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Pick your color and then click a button!\")), /*#__PURE__*/React.createElement(ChromePicker, {\n    id: \"color-picker\",\n    color: `${chosenColor}`,\n    onChangeComplete: e => setChosenColor(e.hex),\n    style: {\n      \"display\": `${colorPickDisplayed ? \"initial\" : \"none\"}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"colors\",\n    onClick: () => {\n      setColorPickDisplayed(!colorPickDisplayed);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, !colorPickDisplayed ? \"Colors\" : \"Keep Playing\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jessefalconmusik/newDev/simon_says/simon_says/src/App.js"],"names":["React","useState","useEffect","Fragment","Howl","Howler","ChromePicker","App","colorPickDisplayed","setColorPickDisplayed","chosenColor","setChosenColor","handleColor","target","style","backgroundColor","notes","e","a","d","g","currentNotes","setCurrentNotes","sequence","setSequence","sequenceCurrentPlace","setSequenceCurrentPlace","nextButton","setNextButton","handleClick","buttonId","length","Math","floor","random","generateNewSequence","hex"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, Fragment } from \"react\"\nimport {Howl, Howler} from 'howler'; // audio\nimport { ChromePicker } from 'react-color' // color picker.\nimport logo from './logo.svg';\nimport './App.css';\n\n\n// https://codepen.io/raurir/pen/qtEmn <---- source of pentagram.\n\n// No need for context, cuz so small. No need for router either.\n\n\n\n\nfunction App() {\n\n  //\n  // how about a game of simon says?\n\n\n\n\nconst [colorPickDisplayed, setColorPickDisplayed] = useState(false)\nconst [chosenColor, setChosenColor] = useState(\"#fff\")\n\n\nfunction handleColor(target) {\n  if (colorPickDisplayed) {\n    target.style.backgroundColor = `${chosenColor}`\n  }\n}\n\n\n\n\n\n\n\n  // ==============\n  // NOTES: what are the urls for all these electric guitar notes?\n  // =============\n  const notes = { e: \"url\", a: \"url\", d: \"url\", g: \"etc...\" };\n\n  //\n  // And we need to remember what sequence of notes the user must copy. We're going to spread these notes into an array so we can keep pushing new notes.\n  const [currentNotes, setCurrentNotes] = useState([]);\n  //\n  // Where are we in Simon's melody?\n  const [sequence, setSequence] = useState([]);\n  const [sequenceCurrentPlace, setSequenceCurrentPlace] = useState(0);\n  const [nextButton, setNextButton] = useState(\"red\");\n  //\n  // every time we advance within the current sequence, a new correct choice has to be set.\n  useEffect(() => {\n    setNextButton(currentNotes[sequenceCurrentPlace]);\n  }, [sequenceCurrentPlace]);\n\n  // Choice logic, did the user pick the right note?\n\n  const handleClick = (buttonId) => {\n    if (buttonId == nextButton)\n      if (sequenceCurrentPlace < sequence.length) {\n        setSequenceCurrentPlace(sequenceCurrentPlace + 1);\n      } else {\n        setSequence([\n          ...sequence,\n          Math.floor(Math.random * currentNotes.length),\n        ]);\n        setSequenceCurrentPlace(0);\n      }\n  };\n\n  // Make sure to add some clever css effects for the button lights...\n\n  const generateNewSequence = () => {};\n  //\n\n  // return (\n  //   <div>\n  //     <div id=\"simonSays\" class=\"center\">\n  //       <div id=\"outerCircle\">\n  //         {buttonColors.map((colorIndex) => (\n  //           <div\n  //             style={{ \"background-color\": `${colors[colorIndex]}` }}\n  //             onClick={() => handleClick(colors[colorIndex])}\n  //           ></div>\n  //         ))}\n  //         <div></div>\n  //       </div>\n  //     </div>\n  //     <div id=\"rulesLeaderboard\" class=\"left\"></div>\n  //     <div id=\"options\" class=\"right\">\n  //       <label for=\"scales\">Choose your scale.</label>\n  //       <input type=\"select\" value=\"\" onChange={() => {}}>\n  //         {scales.map((scale) => (\n  //           <>\n  //             <option id={scale}>{scale}</option>\n  //           </>\n  //         ))}\n  //       </input>\n\n  //       <button onClick={() => setScale()}>Rock On</button>\n  //     </div>\n  //   </div>\n  // );\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"shell\">\n        <div className=\"base\">\n          <div className=\"circle\" onClick={(e) => {handleColor(e.target)}}></div>\n            <div className=\"bar n0\"><li></li></div>\n            <div className=\"bar n1\"><li></li></div>\n            <div className=\"bar n2\"><li></li></div>\n            <div className=\"bar n3\"><li></li></div>\n            <div className=\"bar n4\"><li></li></div>\n            <div className=\"overbar n0\"><li></li></div>\n            <div className=\"overbar n1\"><li></li></div>\n            <div className=\"overbar n2\"><li></li></div>\n            <div className=\"overbar n3\"><li></li></div>\n            <div className=\"overbar n4\"><li></li></div>\n          </div>\n        </div>\n        <div className=\"buttonContainer\" onClick={(e) => {handleColor(e.target)}}>\n          <button \n            type=\"button\" \n            id=\"downright-arrow\"\n            onClick={() => handleClick(\"downright\")}></button>\n          <button \n            type=\"button\" \n            id=\"downleft-arrow\"\n            onClick={() => handleClick(\"downleft\")}></button>\n          <button \n            type=\"button\" \n            id=\"down-arrow\"\n            onClick={() => handleClick(\"down\")}></button>\n          <button \n            type=\"button\" \n            id=\"topright-arrow\"\n            onClick={() => handleClick(\"topright\")}></button>\n          <button \n            type=\"button\"\n            id=\"topleft-arrow\"\n            onClick={() => handleClick(\"topleft\")}></button>\n        </div>\n        <div>\n          <div class=\"modal\">\n            <p>Pick your color and then click a button!</p>\n          </div>\n              <ChromePicker \n                id=\"color-picker\"\n                color={`${chosenColor}`} \n                onChangeComplete={(e) => setChosenColor(e.hex)}\n                style={{\"display\": `${colorPickDisplayed ? \"initial\" : \"none\"}`}}\n              \n                />\n        </div>\n          <button type=\"button\" id=\"options\"></button>\n          <button type=\"button\" id=\"colors\" onClick={() => {setColorPickDisplayed(!colorPickDisplayed)}}\n            >{!colorPickDisplayed ? \"Colors\" : \"Keep Playing\"}</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}